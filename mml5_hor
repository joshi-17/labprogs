import numpy as np
#geometrical of linear transformation
from sympy import *
import matplotlib.pyplot as plt
ans=[]
k=int(input("enter the value of k"))
theta=int(input("enter the value of theta"))


ans.append(Matrix([[1,0],[0,-1]]))
ans.append(Matrix([[-1,0],[0,1]]))
ans.append(Matrix([[-1,0],[0,-1]]))
ans.append(Matrix([[0,1],[1,0]]))
ans.append(Matrix([[0,-1],[-1,0]]))
ans.append(Matrix([[k,0],[0,1]]))
ans.append(Matrix([[1,0],[0,k]]))
ans.append(Matrix([[1,0],[k,1]]))
ans.append(Matrix([[1,k],[0,1]]))
ans.append(Matrix([[1,k],[0,1]]))
ans.append(Matrix([[cos(theta),sin(theta)],[-sin(theta),cos(theta)]]))
print("enter the vector")
l=[]
for i in range(0,2):
  l.append(int(input()))
m=Matrix(l)

print("the vector is")
display(m)
x_coord = np.array(m.row(0)).astype(float)[0]  # Extract single value
y_coord = np.array(m.row(1)).astype(float)[0]
plt.figure(figsize=(6, 6))
origin = [0], [0]  
plt.quiver(*origin, x_coord, y_coord, color='r', angles='xy', scale_units='xy', scale=1)
plt.xlim(-3, 3)
plt.ylim(-3, 3)
plt.xlabel('X-axis')
plt.ylabel('Y-axis')
plt.title('Vector v = (1, -2)')
plt.grid(True)
plt.show()
for i in ans:
  
  x=i*m

  x_coord = np.array(x.row(0)).astype(float)[0]
  y_coord = np.array(x.row(1)).astype(float)[0]
  plt.figure(figsize=(6, 6))
  origin = [0], [0] 
  plt.quiver(*origin, x_coord, y_coord, color='r', angles='xy', scale_units='xy', scale=1)
  plt.xlim(-3, 3)
  plt.ylim(-3, 3)
  plt.xlabel('X-axis')
  plt.ylabel('Y-axis')
  plt.grid(True)
  plt.show()

